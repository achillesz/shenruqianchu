"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (commands, options) {
    commands = commands.split("\n").map(function (command) {
        return command.trim();
    }).filter(function (command) {
        return !!command;
    });

    options = options || {};
    var verbose = options.verbose !== false;
    delete options.verbose;
    var cwd = options.cwd || process.cwd();

    return new Promise(function (resolve, reject) {
        var stdout = [];
        var stderr = [];

        (function runCommand() {
            if (commands.length === 0) {
                resolve(stdout.join(""));
                return;
            }

            if (!_fs2.default.existsSync(cwd)) {
                _cliConsole2.default.error("\u547D\u4EE4\u6267\u884C\u7684\u76EE\u5F55" + cwd + "\u4E0D\u5B58\u5728");
                return;
            }

            var commandStr = commands.shift();

            if (verbose) {
                _cliConsole2.default.info(commandStr);
            }

            var command = function (commandItems) {
                return {
                    name: commandItems.shift(),
                    argv: commandItems
                };
            }(commandStr.split(/\s+/));

            if (command.name === "cd") {
                cwd = _path2.default.join(cwd, command.argv[0]);
                runCommand();
            } else {
                options.cwd = cwd;

                command = (0, _child_process.spawn)(command.name, command.argv, options);

                command.stdout.on('data', function (data) {
                    var info = data.toString("utf8");
                    stdout.push(info);
                    if (verbose) {
                        _cliConsole2.default.log(info.trim());
                    }
                });

                command.stderr.on('data', function (data) {
                    var info = data.toString("utf8");
                    stderr.push(info);
                    _cliConsole2.default.error(info.trim());
                });

                command.on('close', function (code) {
                    if (code === 0) {
                        runCommand();
                    } else {
                        reject(new Error("\u547D\u4EE4" + commandStr + "\u6267\u884C\u9519\u8BEF"));
                    }
                });
            }
        })();
    });
};

var _fs = require("fs");

var _fs2 = _interopRequireDefault(_fs);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _cliConsole = require("cli-console");

var _cliConsole2 = _interopRequireDefault(_cliConsole);

var _child_process = require("child_process");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }